# coding: utf-8

"""
    person

    The Person REST APIs enable you to access information about the worker person, including country-specific configuration information about name components.

    The version of the OpenAPI document: v4
    Generated by: https://konfigthis.com
"""

from datetime import date, datetime  # noqa: F401
import decimal  # noqa: F401
import functools  # noqa: F401
import io  # noqa: F401
import re  # noqa: F401
import typing  # noqa: F401
import typing_extensions  # noqa: F401
import uuid  # noqa: F401

import frozendict  # noqa: F401

from workday_person_python_sdk import schemas  # noqa: F401


class MilitaryService6de928ab128410005b41e47e6d890218(
    schemas.ComposedSchema,
):
    """
    This class is auto generated by Konfig (https://konfigthis.com)
    """


    class MetaOapg:
        
        
        class all_of_0(
            schemas.DictSchema
        ):
        
        
            class MetaOapg:
                
                class properties:
                
                    @staticmethod
                    def militaryDischargeTypeReference() -> typing.Type['MilitaryDischargeTypeReferenceB26f12db214d100010f22b23c4e70000']:
                        return MilitaryDischargeTypeReferenceB26f12db214d100010f22b23c4e70000
                    notes = schemas.StrSchema
                    discharge = schemas.DateSchema
                
                    @staticmethod
                    def rank() -> typing.Type['Rank6de928ab128410005b41e4ba56a6021f']:
                        return Rank6de928ab128410005b41e4ba56a6021f
                
                    @staticmethod
                    def status() -> typing.Type['Status6de928ab128410005b41e4a4e4d2021c']:
                        return Status6de928ab128410005b41e4a4e4d2021c
                
                    @staticmethod
                    def militaryServiceReference() -> typing.Type['MilitaryServiceReference6de928ab128410005b41e4b2f27d021e']:
                        return MilitaryServiceReference6de928ab128410005b41e4b2f27d021e
                    begin = schemas.DateSchema
                
                    @staticmethod
                    def type() -> typing.Type['Type6de928ab128410005b41e4ac0ec5021d']:
                        return Type6de928ab128410005b41e4ac0ec5021d
                    descriptor = schemas.StrSchema
                    __annotations__ = {
                        "militaryDischargeTypeReference": militaryDischargeTypeReference,
                        "notes": notes,
                        "discharge": discharge,
                        "rank": rank,
                        "status": status,
                        "militaryServiceReference": militaryServiceReference,
                        "begin": begin,
                        "type": type,
                        "descriptor": descriptor,
                    }
            
            @typing.overload
            def __getitem__(self, name: typing_extensions.Literal["militaryDischargeTypeReference"]) -> 'MilitaryDischargeTypeReferenceB26f12db214d100010f22b23c4e70000': ...
            
            @typing.overload
            def __getitem__(self, name: typing_extensions.Literal["notes"]) -> MetaOapg.properties.notes: ...
            
            @typing.overload
            def __getitem__(self, name: typing_extensions.Literal["discharge"]) -> MetaOapg.properties.discharge: ...
            
            @typing.overload
            def __getitem__(self, name: typing_extensions.Literal["rank"]) -> 'Rank6de928ab128410005b41e4ba56a6021f': ...
            
            @typing.overload
            def __getitem__(self, name: typing_extensions.Literal["status"]) -> 'Status6de928ab128410005b41e4a4e4d2021c': ...
            
            @typing.overload
            def __getitem__(self, name: typing_extensions.Literal["militaryServiceReference"]) -> 'MilitaryServiceReference6de928ab128410005b41e4b2f27d021e': ...
            
            @typing.overload
            def __getitem__(self, name: typing_extensions.Literal["begin"]) -> MetaOapg.properties.begin: ...
            
            @typing.overload
            def __getitem__(self, name: typing_extensions.Literal["type"]) -> 'Type6de928ab128410005b41e4ac0ec5021d': ...
            
            @typing.overload
            def __getitem__(self, name: typing_extensions.Literal["descriptor"]) -> MetaOapg.properties.descriptor: ...
            
            @typing.overload
            def __getitem__(self, name: str) -> schemas.UnsetAnyTypeSchema: ...
            
            def __getitem__(self, name: typing.Union[typing_extensions.Literal["militaryDischargeTypeReference", "notes", "discharge", "rank", "status", "militaryServiceReference", "begin", "type", "descriptor", ], str]):
                # dict_instance[name] accessor
                return super().__getitem__(name)
            
            
            @typing.overload
            def get_item_oapg(self, name: typing_extensions.Literal["militaryDischargeTypeReference"]) -> typing.Union['MilitaryDischargeTypeReferenceB26f12db214d100010f22b23c4e70000', schemas.Unset]: ...
            
            @typing.overload
            def get_item_oapg(self, name: typing_extensions.Literal["notes"]) -> typing.Union[MetaOapg.properties.notes, schemas.Unset]: ...
            
            @typing.overload
            def get_item_oapg(self, name: typing_extensions.Literal["discharge"]) -> typing.Union[MetaOapg.properties.discharge, schemas.Unset]: ...
            
            @typing.overload
            def get_item_oapg(self, name: typing_extensions.Literal["rank"]) -> typing.Union['Rank6de928ab128410005b41e4ba56a6021f', schemas.Unset]: ...
            
            @typing.overload
            def get_item_oapg(self, name: typing_extensions.Literal["status"]) -> typing.Union['Status6de928ab128410005b41e4a4e4d2021c', schemas.Unset]: ...
            
            @typing.overload
            def get_item_oapg(self, name: typing_extensions.Literal["militaryServiceReference"]) -> typing.Union['MilitaryServiceReference6de928ab128410005b41e4b2f27d021e', schemas.Unset]: ...
            
            @typing.overload
            def get_item_oapg(self, name: typing_extensions.Literal["begin"]) -> typing.Union[MetaOapg.properties.begin, schemas.Unset]: ...
            
            @typing.overload
            def get_item_oapg(self, name: typing_extensions.Literal["type"]) -> typing.Union['Type6de928ab128410005b41e4ac0ec5021d', schemas.Unset]: ...
            
            @typing.overload
            def get_item_oapg(self, name: typing_extensions.Literal["descriptor"]) -> typing.Union[MetaOapg.properties.descriptor, schemas.Unset]: ...
            
            @typing.overload
            def get_item_oapg(self, name: str) -> typing.Union[schemas.UnsetAnyTypeSchema, schemas.Unset]: ...
            
            def get_item_oapg(self, name: typing.Union[typing_extensions.Literal["militaryDischargeTypeReference", "notes", "discharge", "rank", "status", "militaryServiceReference", "begin", "type", "descriptor", ], str]):
                return super().get_item_oapg(name)
            
        
            def __new__(
                cls,
                *args: typing.Union[dict, frozendict.frozendict, ],
                militaryDischargeTypeReference: typing.Union['MilitaryDischargeTypeReferenceB26f12db214d100010f22b23c4e70000', schemas.Unset] = schemas.unset,
                notes: typing.Union[MetaOapg.properties.notes, str, schemas.Unset] = schemas.unset,
                discharge: typing.Union[MetaOapg.properties.discharge, str, date, schemas.Unset] = schemas.unset,
                rank: typing.Union['Rank6de928ab128410005b41e4ba56a6021f', schemas.Unset] = schemas.unset,
                status: typing.Union['Status6de928ab128410005b41e4a4e4d2021c', schemas.Unset] = schemas.unset,
                militaryServiceReference: typing.Union['MilitaryServiceReference6de928ab128410005b41e4b2f27d021e', schemas.Unset] = schemas.unset,
                begin: typing.Union[MetaOapg.properties.begin, str, date, schemas.Unset] = schemas.unset,
                type: typing.Union['Type6de928ab128410005b41e4ac0ec5021d', schemas.Unset] = schemas.unset,
                descriptor: typing.Union[MetaOapg.properties.descriptor, str, schemas.Unset] = schemas.unset,
                _configuration: typing.Optional[schemas.Configuration] = None,
                **kwargs: typing.Union[schemas.AnyTypeSchema, dict, frozendict.frozendict, str, date, datetime, uuid.UUID, int, float, decimal.Decimal, None, list, tuple, bytes],
            ) -> 'all_of_0':
                return super().__new__(
                    cls,
                    *args,
                    militaryDischargeTypeReference=militaryDischargeTypeReference,
                    notes=notes,
                    discharge=discharge,
                    rank=rank,
                    status=status,
                    militaryServiceReference=militaryServiceReference,
                    begin=begin,
                    type=type,
                    descriptor=descriptor,
                    _configuration=_configuration,
                    **kwargs,
                )
        
        @classmethod
        @functools.lru_cache()
        def all_of(cls):
            # we need this here to make our import statements work
            # we must store _composed_schemas in here so the code is only run
            # when we invoke this method. If we kept this at the class
            # level we would get an error because the class level
            # code would be run when this module is imported, and these composed
            # classes don't exist yet because their module has not finished
            # loading
            return [
                cls.all_of_0,
            ]


    def __new__(
        cls,
        *args: typing.Union[dict, frozendict.frozendict, str, date, datetime, uuid.UUID, int, float, decimal.Decimal, bool, None, list, tuple, bytes, io.FileIO, io.BufferedReader, ],
        _configuration: typing.Optional[schemas.Configuration] = None,
        **kwargs: typing.Union[schemas.AnyTypeSchema, dict, frozendict.frozendict, str, date, datetime, uuid.UUID, int, float, decimal.Decimal, None, list, tuple, bytes],
    ) -> 'MilitaryService6de928ab128410005b41e47e6d890218':
        return super().__new__(
            cls,
            *args,
            _configuration=_configuration,
            **kwargs,
        )

from workday_person_python_sdk.model.military_discharge_type_reference_b26f12db214d100010f22b23c4e70000 import MilitaryDischargeTypeReferenceB26f12db214d100010f22b23c4e70000
from workday_person_python_sdk.model.military_service_reference6de928ab128410005b41e4b2f27d021e import MilitaryServiceReference6de928ab128410005b41e4b2f27d021e
from workday_person_python_sdk.model.rank6de928ab128410005b41e4ba56a6021f import Rank6de928ab128410005b41e4ba56a6021f
from workday_person_python_sdk.model.status6de928ab128410005b41e4a4e4d2021c import Status6de928ab128410005b41e4a4e4d2021c
from workday_person_python_sdk.model.type6de928ab128410005b41e4ac0ec5021d import Type6de928ab128410005b41e4ac0ec5021d
